class MedianFinder {

    /** initialize your data structure here. */
    PriorityQueue<Integer> left;
    PriorityQueue<Integer> right;
    
    public MedianFinder() {
        
        left =  new PriorityQueue<>(Collections.reverseOrder());
        right = new PriorityQueue<>();
        
    }
    
    public void addNum(int num) {
        
        if(right.size() > 0 && num > right.peek()){
            right.add(num);
            
        }else{
            left.add(num);
            
        }
        
        
        if(left.size() - right.size() == 2){
            right.add(left.remove());
            
        }else if(right.size() - left.size() == 2){
            left.add(right.remove());
            
        }
        
    }
    
    public double findMedian() {
        double m = 0.0;
        
        if(left.size() > right.size()){
            return left.peek() * 1.0;
        }else if(right.size() > left.size()){
            return right.peek() * 1.0;
        }else{
            m = (left.peek() + right.peek())* 1.0 / 2;
            return m;
        }
    }
}
